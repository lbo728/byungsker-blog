---

---

<html lang="en" transition:animate="none">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Admin</title>
  </head>
  <body>
    <div class="editor">
      <div class="form">
        <input id="input" placeholder="제목을 입력해주세요" />
        <textarea id="textarea" placeholder="당신의 이야기를 적어주세요..."
        ></textarea>
        <div class="button-nav">
          <div class="btn-previous">나가기</div>
          <div class="btn-wrapper">
            <div class="btn-sub">임시 저장</div>
            <div class="btn-primary">업로드</div>
          </div>
        </div>
      </div>

      <div class="preview">
        <div id="title"></div>
        <div id="result"></div>
      </div>
    </div>
    <script>
      import { Marked } from "marked";

      import uploadPost from "../api/uploadPost";

      const marked = new Marked();

      const textareaElement = document.getElementById(
        "textarea",
      ) as HTMLTextAreaElement;

      const inputElement = document.getElementById(
        "input",
      ) as HTMLTextAreaElement;

      const resultElement = document.getElementById("result") as HTMLDivElement;
      const titleElement = document.getElementById("title") as HTMLDivElement;

      if (textareaElement && resultElement) {
        textareaElement.onkeyup = async function () {
          const parsedContent = await marked.parse(textareaElement.value);
          resultElement.innerHTML = parsedContent;
        };
        inputElement.onkeyup = async function () {
          const parsedContent = await marked.parse(inputElement.value);
          titleElement.innerHTML = parsedContent;
        };
      }

      const clickUpload = document.querySelector(
        ".btn-primary",
      ) as HTMLButtonElement;

      clickUpload.onclick = async function () {
        const title = inputElement.value;
        const content = textareaElement.value;
        const tags = ["example", "tags"];

        await uploadPost(title, content, tags);
      };

      const btnPrevious = document.querySelector(
        ".btn-previous",
      ) as HTMLButtonElement;

      btnPrevious.addEventListener("click", () => {
        window.location.href = "/blog";
      });
    </script>
  </body>

  <style>
    * {
      box-sizing: border-box;
    }

    p {
      margin: 0;
      line-height: 150%;
    }

    body {
      margin: 0;
      width: 100vw;
      height: 100vh;
    }

    .editor {
      display: flex;
      flex-direction: row;
      width: 100%;
      height: 100%;
    }
    .form {
      display: flex;
      position: relative;
      flex-direction: column;
      flex: 1 1 0%;
      background-color: white;
      border-right: 1px solid #ccc;
      padding-bottom: 80px;
      background-color: #f6f6f6;

      .button-nav {
        background-color: #ffffff;
        box-shadow: 0 -4px 24px rgba(0, 0, 0, 0.04);
        display: flex;
        width: 100%;
        box-sizing: border-box;
        padding: 16px 24px;
        justify-content: space-between;
        align-items: center;
        position: absolute;
        bottom: 0;
        z-index: 222;

        .btn-previous {
          display: flex;
          background-color: transparent;
          justify-content: center;
          align-items: center;
          width: 120px;
          height: 40px;
          border-radius: 8px;
          cursor: pointer;

          &:hover {
            background-color: #f2f2f2;
          }
        }

        .btn-wrapper {
          display: flex;
          flex-direction: row;
          gap: 8px;
        }

        .btn-primary {
          display: flex;
          background-color: #2d97d9;
          justify-content: center;
          align-items: center;
          width: 120px;
          height: 40px;
          border-radius: 8px;
          color: white;
          cursor: pointer;

          &:hover {
            background-color: rgb(41, 135, 194);
          }
        }
        .btn-sub {
          display: flex;
          background-color: transparent;
          justify-content: center;
          align-items: center;
          width: 120px;
          height: 40px;
          border-radius: 8px;
          cursor: pointer;

          &:hover {
            background-color: #f2f2f2;
          }
        }
      }
    }

    #input {
      /* height: 64px; */
      font-weight: 700;
      border: none;
      resize: none;
      outline: none;
      background-color: #f6f6f6;
      font-size: 40px;
      padding: 20px;
    }

    #textarea {
      height: 100%;
      border: none;

      resize: none;
      outline: none;
      background-color: #f6f6f6;
      font-size: 14px;
      font-family: "Monaco", courier, monospace;
      padding: 20px;
    }

    .preview {
      display: flex;
      flex-direction: column;
      flex: 1 1 0%;
      padding: 20px 20px 80px 20px;
      box-sizing: border-box;
      overflow: auto;
    }

    #title {
      font-size: 32px;
      font-weight: 700;
    }
    #result {
      code {
        line-height: normal;
        background: rgba(135, 131, 120, 0.15);
        color: #eb5757;
        border-radius: 4px;
        font-size: 85%;
        padding: 0.2em 0.4em;
      }

      a {
        text-decoration-line: none;
        color: #6740d4;
        &:hover {
          text-decoration: underline;
        }
      }
    }
  </style>
</html>
