---
import { GET } from "./api/posts";
import type { Post } from "../types/Post";
import BaseLayout from "../layout/BaseLayout.astro";
import PostList from "../component/PostList.astro";
import Loading from "../component/Loading.astro";

export const prerender = false;

let posts: Post[] = [];
let errorMessage: string | null = null;

try {
  const response = await GET();

  if (!response.ok) {
    throw new Error(`Failed to fetch posts: ${response.status}`);
  }

  const data = await response.json();
  posts = (data.posts as Post[])
    .sort(
      (a: Post, b: Post) =>
        new Date(b.created_at).getTime() - new Date(a.created_at).getTime(),
    )
    .slice(0, 5);
} catch (error) {
  console.error(error);
  errorMessage = "Failed to load posts. Please try again later.";
}
---

<BaseLayout>
  <section>
    <div class="recent">Recent Posts</div>
    <div class="post-list">
      <PostList server:defer {posts}>
        <Loading slot="fallback" />
      </PostList>
    </div>
    <a href="/post" class="button-all">→ 전체 보기</a>
  </section>
</BaseLayout>

<style>
  .loading {
    font-size: 18px;
    color: #b2b2b2;
    text-align: center;
    margin: 50px 0;
  }
  .button-all {
    display: flex;
    margin-top: 24px;
    padding: 12px;
    cursor: pointer;
    border-radius: 8px;
    width: fit-content;
    color: white;

    &:hover {
      color: white;
      background-color: #525252;
      text-decoration: none;
    }
  }
  .recent {
    font-size: 20px;
  }
  .post-list {
    display: flex;
    flex-direction: column;
    gap: 48px;
    margin-top: 16px;
  }

  .recent {
    font-size: 20px;
  }
  .post-list {
    display: flex;
    flex-direction: column;
    gap: 48px;
    margin-top: 16px;

    .title {
      font-size: 24px;
      font-weight: 700;
    }

    .post-item {
      text-decoration: none;
      color: white;
      display: flex;
      padding: 24px;
      border-radius: 8px;
      border: 1px solid #fcfcfc;
      flex-direction: column;
      gap: 16px;

      &:hover {
        background-color: #242424;
        border: 1px solid #b2b2b2;
      }
    }

    .time-info {
      display: flex;
      flex-direction: row;
      gap: 8px;
      .created-at {
        font-style: italic;
      }
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;

      .tag {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 4px 8px;
        background-color: #525252;
        border-radius: 100px;
        font-size: 14px;
      }
    }
  }
</style>
